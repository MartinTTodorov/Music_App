plugins {
	id 'org.springframework.boot' version '2.7.4'
	id 'io.spring.dependency-management' version '1.0.14.RELEASE'
	id 'java'
	id "org.sonarqube" version "3.4.0.2513"
	id 'jacoco'

}



group = 'music_individual'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {


	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation ('org.springframework.boot:spring-boot-starter-websocket')
	implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.2'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'mysql:mysql-connector-java'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
	testImplementation 'org.mockito:mockito-core:4.8.0'
}

tasks.named('test') {
	useJUnitPlatform()
}


jacocoTestReport {
	reports {
		xml.enabled true
	}
}

jacocoTestReport {
	reports {
		xml.required = true
	}
}


jacoco {
	toolVersion = "0.8.7"
}


sonarqube {
	properties {
		property 'sonar.host.url', 'http://localhost:9000'
	}
}

tasks.named('sonarqube').configure {
	dependsOn test
}
test.finalizedBy jacocoTestReport
